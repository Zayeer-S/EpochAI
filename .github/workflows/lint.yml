name: Lint and Format Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff mypy bandit
        pip install types-requests types-PyYAML
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run Ruff linter
      run: |
        ruff check epochai/ app/ tests/ --output-format=github

    - name: Run Ruff formatter check
      run: |
        ruff format epochai/ app/ tests/ --check

    - name: Run MyPy type checker
      run: |
        mypy epochai/ app/

    - name: Run Bandit security linter
      run: |
        bandit -r epochai/ app/ -f json -o bandit-report.json || true
        bandit -r epochai/ app/
      continue-on-error: true

    - name: Upload Bandit report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: bandit-report-${{ matrix.python-version }}
        path: bandit-report.json

  test:
    runs-on: ubuntu-latest
    needs: lint

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run tests
      run: |
        pytest tests/ --cov=epochai --cov-report=xml --cov-report=html
      continue-on-error: true  # Remove when tests are made

    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: coverage-report
        path: htmlcov/
